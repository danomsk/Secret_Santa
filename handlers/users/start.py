import random
from logging import Logger

from aiogram import types
from aiogram.dispatcher.filters.builtin import CommandStart
from aiogram.types import CallbackQuery, ReplyKeyboardRemove

from data.People import array_users, find_name
from keyboards.default.contact_buttons import contact
from keyboards.inline.check_keyboard import check
from loader import dp

pop_user = None


@dp.message_handler(CommandStart())
async def bot_start(message: types.Message):
    await message.answer(f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.full_name}!")
    await message.answer("–°–µ–π—á–∞—Å —Ç—ã —É–∑–Ω–∞–µ—à—å, –∫–æ–º—É –±—É–¥–µ—à—å –¥–∞—Ä–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫!ü§´\n"
                         "–ù–æ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ç—ã –¥–æ–ª–∂–µ–Ω –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å–≤–æ–∏–º –Ω–æ–º–µ—Ä–æ–º, –¥–∞–±—ã —Ç–µ–±–µ –Ω–µ –ø–æ–ø–∞–ª—Å—è —Ç–≤–æ–π –∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
                         reply_markup=contact)


@dp.message_handler(content_types=types.ContentTypes.CONTACT)
async def show_info(message: types.Message):
    global pop_user
    if (len(array_users) != 0):
        contact = message.contact
        await message.answer("–°–ø–∞—Å–∏–±–æ, —Ç–µ–ø–µ—Ä—å —Ç—ã —Å–µ–±–µ –Ω–µ –ø–æ–ø–∞–¥—ë—à—å—Å—è...", reply_markup=ReplyKeyboardRemove())
        await message.answer("–ñ–µ—Ä–µ–±—å—ë–≤–∫–∞ –±—ã–ª–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∞...\n–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ, –∫—Ç–æ –∂–µ —Ç–µ–±–µ –ø–æ–ø–∞–ª—Å—è?", reply_markup=check)
        user = random.choice(array_users)
        pop_user = find_name(message.contact["phone_number"])
    else:
        await message.answer("–ü—Ä–æ—Å—Ç–∏, –Ω–æ –±–æ–ª—å—à–µ –Ω–µ—Ç –ª—é–¥–µ–π –∫–æ–º—É –º–æ–∂–Ω–æ –±—ã–ª–æ –±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫")


@dp.callback_query_handler(text="check")
async def def_check(call: CallbackQuery):
    global pop_user
    user = random.choice(array_users)

    await call.message.answer("–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –≤–æ—Ç –¥–∞–Ω–Ω—ã–µ —Ç–≤–æ–µ–≥–æ —Ç–∞–π–Ω–æ–≥–æ –¥—Ä—É–≥–∞:")
    await call.message.answer(f"<b>–§–ò–û</b>: {user[0]}\n"
                              f"<b>–¢–µ–ª–µ—Ñ–æ–Ω</b>: {user[1]}\n"
                              f"<b>–ê–¥—Ä–µ—Å</b>: {user[2]}\n"
                              f"<b>–ò–Ω–¥–µ–∫—Å</b>: {user[3]}\n"
                              f"<b>–í–ö</b>: {user[4]}")
    print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {call.from_user.full_name} –¥–æ—Å—Ç–∞–ª—Å—è {user[0]}")

    await call.message.edit_reply_markup()
    if (pop_user != None):
        array_users.append(pop_user)
        array_users.pop(array_users.index(user))
    else:
        array_users.pop(array_users.index(user))

    file = open("info_about_users.txt", "a+")
    file.write(f"{call.from_user.full_name} - {user[0]}\n")
    file.close()
